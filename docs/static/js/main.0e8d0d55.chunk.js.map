{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","hooks/useFetchGifs.js","components/GifGridItem.js","components/GifGrid.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","useFetchGifs","loading","state","setState","useEffect","then","imgs","GifGridItem","className","src","alt","GifGrid","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"qMAmCeA,EA/BK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACJC,mBAAS,IADL,mBAClCC,EADkC,KACtBC,EADsB,KAgB1C,OACC,0BAAMC,SATc,SAACC,GACrBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC9BR,GAAc,SAAAS,GAAI,OAAGP,GAAH,mBAAiBO,OACnCN,EAAc,OAMd,2BACCO,KAAO,OACPC,MAAUT,EACVU,SAjBuB,SAACP,GAC1BF,EAAcE,EAAEQ,OAAOF,Y,uBCTnBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACTC,EADS,iDAC6CC,UAAUH,GADvD,+DAEQI,MAAMF,GAFd,cAETG,EAFS,gBAGQA,EAAKC,OAHb,uBAGPC,EAHO,EAGPA,KACFC,EAAWD,EAAKE,KAAK,SAAAC,GAAM,IAAD,EAC/B,MAAO,CACNC,GAAQD,EAAIC,GACZC,MAAQF,EAAIE,MACZV,IAAG,UAAKQ,EAAIG,cAAT,aAAK,EAAYC,iBAAiBZ,QARxB,kBAWRM,GAXQ,4CAAH,sDCsBEO,EAnBM,SAAEf,GAAa,IAAD,EACRd,mBAAS,CAClCqB,KAAO,GACPS,SAAU,IAHuB,mBAC3BC,EAD2B,KACpBC,EADoB,KAgBlC,OATAC,qBAAU,WACTpB,EAAQC,GACNoB,MAAM,SAAAC,GACNH,EAAS,CACRX,KAAUc,EACVL,SAAU,SAGZ,CAAEhB,IACGiB,GCJOK,EAbK,SAAC,GAAuB,EAArBX,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAEjC,OACC,yBAAKqB,UAAU,0CACd,yBACCC,IAAOtB,EACPuB,IAAQb,IAET,2BAAKA,KCkBOc,EArBC,SAAC,GAAkB,IAAhB1B,EAAe,EAAfA,SAAe,EACDe,EAAaf,GAAhCa,EADoB,EACzBN,KAAYS,EADa,EACbA,QAEpB,OACC,oCACC,4BAAMhB,GACJgB,GAAW,yCACb,yBAAKO,UAAU,aAEbV,EAAOJ,KAAI,SAACC,GAAD,OACV,kBAAC,EAAD,eACCiB,IAAQjB,EAAIC,IACPD,UCgBGkB,EA9BM,WAAM,MAEY1C,mBAAS,CAAC,gBAFtB,mBAElB2C,EAFkB,KAEN5C,EAFM,KAQ1B,OACC,oCACC,4CACA,kBAAC,EAAD,CAAaA,cAAgBA,IAC7B,6BAEA,4BAEE4C,EAAWpB,KAAI,SAACT,GAAD,OAGd,kBAAC,EAAD,CACC2B,IAAa3B,EACbA,SAAaA,U,MCnBpB8B,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,U","file":"static/js/main.0e8d0d55.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\n// el componente recibe props y se hace el desestructuracion para llamar al metodo directamente\r\nconst AddCategory = ({ setCategories }) => {\r\n\tconst [ inputValue, setInputValue ] = useState('');  // el useState siempre debe de recibir un estado\r\n\t// inicial para que no tenga error ya que si se deja vacio, el estado seria undefined\r\n\r\n\tconst handleInputChange = (e)=>{\r\n\t\tsetInputValue(e.target.value);\r\n\t}\r\n\r\n\tconst handleSubmit = (e)=>{\r\n\t\te.preventDefault(); // previene el comportamiento de recarga por defecto del navegador\r\n\t\tif (inputValue.trim().length > 2) {\r\n\t\t\tsetCategories(cats=>[inputValue,...cats]);\r\n\t\t\tsetInputValue('');\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<form onSubmit={ handleSubmit }>\t\r\n\t\t\t<input\r\n\t\t\t\ttype = \"text\"\r\n\t\t\t\tvalue = { inputValue }\r\n\t\t\t\tonChange = { handleInputChange }\r\n\t\t\t/>\r\n\t\t</form>\r\n\t)\r\n}\r\n\r\nAddCategory.propTypes = {\r\n\tsetCategories : PropTypes.func.isRequired,\r\n}\r\n\r\nexport default AddCategory","const getGifs = async(category)=>{\r\n\tconst url      = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=lyIjQMQ9md9y0T0EfFBxv2ZFaLJAT6C8`;\r\n\tconst resp     = await fetch(url);\r\n\tconst { data } = await resp.json();\r\n\tconst gifs     = data.map( img=>{\r\n\t\treturn {\r\n\t\t\tid    : img.id,\r\n\t\t\ttitle : img.title,\r\n\t\t\turl   : img.images?.downsized_medium.url,\r\n\t\t}\r\n\t});\r\n\treturn gifs;\r\n}\r\n\r\nexport {\r\n\tgetGifs as default\r\n}\r\n","import { useState, useEffect } from 'react';\r\nimport getGifs from '../helpers/getGifs';\r\n\r\nconst useFetchGifs = ( category )=>{\r\n\tconst [state, setState] = useState({\r\n\t\tdata : [],\r\n\t\tloading : true\r\n\t});\r\n\t// el uso de useEffect nos sirve para que se renderise algun metodo solo una vez en la carga \r\n\t// de la pagina con el segundo parametro del arreglo vacio\r\n\tuseEffect(()=>{\r\n\t\tgetGifs(category)\r\n\t\t\t.then( imgs=>{\r\n\t\t\t\tsetState({\r\n\t\t\t\t\tdata    : imgs,\r\n\t\t\t\t\tloading : false\r\n\t\t\t\t});\r\n\t\t\t} ); \r\n\t},[ category ]);\r\n\treturn state;\r\n}\r\n\r\nexport default useFetchGifs;","import React from 'react'\r\n\r\nconst GifGridItem = ({ id, title, url }) => {\r\n\t\r\n\treturn (\r\n\t\t<div className=\"card animate__animated animate__bounce\">\r\n\t\t\t<img \r\n\t\t\t\tsrc= { url }\r\n\t\t\t\talt = { title }\r\n\t\t\t/>\r\n\t\t\t<p>{ title }</p>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default GifGridItem","// import React, { useState, useEffect } from 'react';\r\nimport React from 'react';\r\n\r\nimport useFetchGifs from '../hooks/useFetchGifs';\r\nimport GifGridItem from './GifGridItem';\r\n\r\n\r\nconst GifGrid = ({ category }) => {\r\n\tconst { data:images,loading } = useFetchGifs(category);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h3>{ category }</h3>\r\n\t\t\t{ loading && <p>Loading...</p> }\r\n\t\t\t<div className=\"card-grid\">\t\t\t\t\r\n\t\t\t\t{ \r\n\t\t\t\t\timages.map((img)=>(\r\n\t\t\t\t\t\t<GifGridItem \r\n\t\t\t\t\t\t\tkey = { img.id }\r\n\t\t\t\t\t\t\t{ ...img }\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t)) \r\n\t\t\t\t}\t\r\n\t\t\t</div>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default GifGrid","import React, { useState } from 'react';\r\n\r\nimport AddCategory from './components/AddCategory';\r\nimport GifGrid from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n\t// const categories = ['One Punch', 'Samurai X', 'Dragon Ball'];\r\n\tconst [ categories, setCategories ] = useState(['Dragon Ball']);\r\n// \r\n// de las dos formas es correcto\r\n\t// const handleAdd = ()=> setCategories([...categories,'Naruto']);\r\n\t// const handleAdd = ()=> setCategories(cats =>[...cats,'Naruto']);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h2>GifExpertApp</h2>\r\n\t\t\t<AddCategory setCategories={ setCategories }/>\r\n\t\t\t<hr/>\r\n\r\n\t\t\t<ul>\r\n\t\t\t\t{\r\n\t\t\t\t\tcategories.map((category)=>(\r\n\t\t\t\t\t\t// el key no deberia ser el indice, sirve para que react pueda renderizar\r\n\t\t\t\t\t\t//  mas facilmente\r\n\t\t\t\t\t\t<GifGrid \r\n\t\t\t\t\t\t\tkey      = { category }\r\n\t\t\t\t\t\t\tcategory = { category }\t\t\t\t\t\t\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t))\r\n\t\t\t\t}\r\n\t\t\t</ul>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport  GifExpertApp from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}